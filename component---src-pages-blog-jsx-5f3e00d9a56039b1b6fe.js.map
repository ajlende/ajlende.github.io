{"version":3,"sources":["webpack:///./src/components/CardGroup.jsx","webpack:///./node_modules/dateformat/lib/dateformat.js","webpack:///./src/pages/blog.jsx"],"names":["CardGroup","rowSize","children","rows","React","Children","toArray","reduce","acc","child","index","arr","slice","map","row","key","a","e","isAncestor","isVertical","defaultProps","Card","isParent","isSize","isChild","render","className","styles","box","global","token","timezone","timezoneClip","dateFormat","date","mask","utc","gmt","arguments","length","kindOf","test","undefined","Date","isNaN","TypeError","maskSlice","String","masks","_","d","D","m","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","Math","round","t","timeNames","tt","T","TT","Z","match","pop","replace","floor","abs","S","val","len","targetThursday","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","setHours","getHours","weekDiff","dow","Array","isArray","toString","call","toLowerCase","BlogPage","data","location","isColor","isBold","angled","hasTextAlign","title","allWordpressPost","edges","filter","post","path","node","id","slug","excerpt","categories","tag","to","level","name","join","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"onBAKO,IAAMA,EAAY,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAQ7BC,EAAOC,IAAMC,SAASC,QAAQJ,GACjCK,QARgB,SAACC,EAAKC,EAAOC,EAAOC,GACrC,OAAID,EAAQT,EAAgBO,EACtB,GAAN,SAAWA,GAAX,CAAgBG,EAAIC,MAAMF,EAAOA,EAAQT,OAMrB,IACnBY,KAJY,SAAAC,GAAG,OAAI,kBAAC,OAAD,CAAMC,IAAKD,EAAIP,QAAO,SAACS,EAAGC,GAAJ,OAAUD,EAAIC,EAAEF,MAAK,KAAMD,MAMvE,OACE,kBAAC,OAAD,CAAMI,YAAU,EAACC,YAAU,GACxBhB,IAKPH,EAAUoB,aAAe,CACvBnB,QAAS,GAGJ,IAAMoB,EAAO,SAAC,GAAD,IAAGnB,EAAH,EAAGA,SAAH,OAClB,kBAAC,OAAD,CAAMoB,UAAQ,EAACC,OAAQ,GACrB,kBAAC,OAAD,CAAMC,SAAO,EAACC,OAAQ,kBAAM,kBAAC,MAAD,CAAKC,UAAWC,IAAOC,KAAM1B,S,qBC9B7D,QAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAeR,SAAW2B,GACT,aAEA,IACMC,EACAC,EACAC,EAHFC,GACEH,EAAQ,mEACRC,EAAW,uIACXC,EAAe,cAEZ,SAAUE,EAAMC,EAAMC,EAAKC,GAahC,GAXyB,IAArBC,UAAUC,QAAiC,WAAjBC,EAAON,IAAuB,KAAKO,KAAKP,KACpEC,EAAOD,EACPA,OAAOQ,IAGTR,EAAOA,GAAQ,IAAIS,gBAEGA,OACpBT,EAAO,IAAIS,KAAKT,IAGdU,MAAMV,GACR,MAAMW,UAAU,gBAKlB,IAAIC,GAFJX,EAAOY,OAAOd,EAAWe,MAAMb,IAASA,GAAQF,EAAWe,MAAe,UAErDpC,MAAM,EAAG,GAEZ,SAAdkC,GAAsC,SAAdA,IAC1BX,EAAOA,EAAKvB,MAAM,GAClBwB,GAAM,EAEY,SAAdU,IACFT,GAAM,IAIV,IAAIY,EAAIb,EAAM,SAAW,MAErBc,EAAIhB,EAAKe,EAAI,UAEbE,EAAIjB,EAAKe,EAAI,SAEbG,EAAIlB,EAAKe,EAAI,WAEbI,EAAInB,EAAKe,EAAI,cAEbK,EAAIpB,EAAKe,EAAI,WAEbM,EAAIrB,EAAKe,EAAI,aAEbO,EAAItB,EAAKe,EAAI,aAEbQ,EAAIvB,EAAKe,EAAI,kBAEbS,EAAItB,EAAM,EAAIF,EAAKyB,oBACnBC,EAAIC,EAAQ3B,GACZ4B,EAAIC,EAAa7B,GACjB8B,EAAQ,CACVd,EAAGA,EACHe,GAAIC,EAAIhB,GACRiB,IAAKlC,EAAWmC,KAAKC,SAASlB,GAC9BmB,KAAMrC,EAAWmC,KAAKC,SAASlB,EAAI,GACnCC,EAAGA,EAAI,EACPmB,GAAIL,EAAId,EAAI,GACZoB,IAAKvC,EAAWmC,KAAKK,WAAWrB,GAChCsB,KAAMzC,EAAWmC,KAAKK,WAAWrB,EAAI,IACrCuB,GAAI5B,OAAOM,GAAGzC,MAAM,GACpBgE,KAAMvB,EACNwB,EAAGvB,EAAI,IAAM,GACbwB,GAAIZ,EAAIZ,EAAI,IAAM,IAClBA,EAAGA,EACHyB,GAAIb,EAAIZ,GACRC,EAAGA,EACHyB,GAAId,EAAIX,GACRC,EAAGA,EACHyB,GAAIf,EAAIV,GACR0B,EAAGhB,EAAIT,EAAG,GACVA,EAAGS,EAAIiB,KAAKC,MAAM3B,EAAI,KACtB4B,EAAG/B,EAAI,GAAKrB,EAAWmC,KAAKkB,UAAU,GAAKrD,EAAWmC,KAAKkB,UAAU,GACrEC,GAAIjC,EAAI,GAAKrB,EAAWmC,KAAKkB,UAAU,GAAKrD,EAAWmC,KAAKkB,UAAU,GACtEE,EAAGlC,EAAI,GAAKrB,EAAWmC,KAAKkB,UAAU,GAAKrD,EAAWmC,KAAKkB,UAAU,GACrEG,GAAInC,EAAI,GAAKrB,EAAWmC,KAAKkB,UAAU,GAAKrD,EAAWmC,KAAKkB,UAAU,GACtEI,EAAGrD,EAAM,MAAQD,EAAM,OAASW,OAAOb,GAAMyD,MAAM5D,IAAa,CAAC,KAAK6D,MAAMC,QAAQ7D,EAAc,IAClG0B,GAAIA,EAAI,EAAI,IAAM,KAAOQ,EAAmC,IAA/BiB,KAAKW,MAAMX,KAAKY,IAAIrC,GAAK,IAAYyB,KAAKY,IAAIrC,GAAK,GAAI,GACpFsC,EAAG,CAAC,KAAM,KAAM,KAAM,MAAM9C,EAAI,GAAK,EAAI,GAAKA,EAAI,IAAMA,EAAI,IAAM,IAAMA,EAAI,IAC5EU,EAAGA,EACHE,EAAGA,GAEL,OAAO3B,EAAK0D,QAAQ/D,GAAO,SAAU6D,GACnC,OAAIA,KAAS3B,EACJA,EAAM2B,GAGRA,EAAM/E,MAAM,EAAG+E,EAAMpD,OAAS,QA2B3C,SAAS2B,EAAI+B,EAAKC,GAIhB,IAHAD,EAAMlD,OAAOkD,GACbC,EAAMA,GAAO,EAEND,EAAI1D,OAAS2D,GAClBD,EAAM,IAAMA,EAGd,OAAOA,EAYT,SAASpC,EAAQ3B,GAEf,IAAIiE,EAAiB,IAAIxD,KAAKT,EAAKkE,cAAelE,EAAKmE,WAAYnE,EAAKoE,WAExEH,EAAeI,QAAQJ,EAAeG,WAAaH,EAAeK,SAAW,GAAK,EAAI,GAEtF,IAAIC,EAAgB,IAAI9D,KAAKwD,EAAeC,cAAe,EAAG,GAE9DK,EAAcF,QAAQE,EAAcH,WAAaG,EAAcD,SAAW,GAAK,EAAI,GAEnF,IAAIE,EAAKP,EAAexC,oBAAsB8C,EAAc9C,oBAC5DwC,EAAeQ,SAASR,EAAeS,WAAaF,GAEpD,IAAIG,GAAYV,EAAiBM,GAAiB,OAClD,OAAO,EAAItB,KAAKW,MAAMe,GAWxB,SAAS9C,EAAa7B,GACpB,IAAI4E,EAAM5E,EAAKsE,SAMf,OAJY,IAARM,IACFA,EAAM,GAGDA,EAST,SAAStE,EAAOyD,GACd,OAAY,OAARA,EACK,YAGGvD,IAARuD,EACK,YAGU,iBAARA,SACKA,EAGZc,MAAMC,QAAQf,GACT,QAGF,GAAGgB,SAASC,KAAKjB,GAAKrF,MAAM,GAAI,GAAGuG,cApG5ClF,EAAWe,MAAQ,CACjB,QAAW,2BACX,UAAa,SACb,WAAc,cACd,SAAY,eACZ,SAAY,qBACZ,UAAa,UACb,WAAc,aACd,SAAY,eACZ,QAAW,aACX,QAAW,WACX,YAAe,yBACf,eAAkB,+BAClB,oBAAuB,+BAGzBf,EAAWmC,KAAO,CAChBC,SAAU,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC9HI,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC/Ma,UAAW,CAAC,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,YAyFjD,KAFD,aACE,OAAOrD,GACR,8BAhNL,I,8NC+BemF,UAnCE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACf,kBAAC,IAAD,CAAQA,SAAUA,GAChB,kBAAC,SAAD,KACE,qDAEF,kBAAC,OAAD,CAAMC,QAAQ,UAAUC,QAAM,EAAC9F,UAAWC,IAAO8F,QAC/C,kBAAC,WAAD,KACE,kBAAC,YAAD,CAAWC,aAAa,YACtB,kBAAC,QAAD,CAAOhG,UAAWC,IAAOgG,OAAzB,WAIN,kBAAC,UAAD,KACE,kBAAC,YAAD,KACE,kBAAC,IAAD,KACGN,EAAKO,iBAAiBC,MACpBC,QAAO,SAAAC,GAAI,MAAkB,UAAdA,EAAKC,QACpBnH,KAAI,oBAAGoH,KAAQC,EAAX,EAAWA,GAAIC,EAAf,EAAeA,KAAMjG,EAArB,EAAqBA,KAAMyF,EAA3B,EAA2BA,MAAOS,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,WAA3C,OACH,kBAAC,IAAD,CAAMtH,IAAKmH,GACT,kBAAC,QAAD,CAAOI,IAAI,MACT,kBAAC,OAAD,CAAMC,GAAOtG,IAAWC,EAAM,kBAAtB,IAA2CiG,GAASR,IAE9D,kBAAC,QAAD,CAAOW,IAAI,MAAM5G,UAAWC,IAAO6G,OACjC,kBAAC,YAAD,KAAYvG,IAAWC,EAAM,oBAC7B,kBAAC,aAAD,KAAamG,EAAWxH,KAAI,qBAAG4H,QAAiBC,KAAK,QAEvD,kBAAC,UAAD,CAASC,wBAAyB,CAAEC,OAAQR,cAWrD,IAAMS,EAAS","file":"component---src-pages-blog-jsx-5f3e00d9a56039b1b6fe.js","sourcesContent":["import React from \"react\"\nimport { Tile, Box } from \"bloomer\"\n\nimport styles from \"./CardGroup.module.sass\"\n\nexport const CardGroup = ({ rowSize, children }) => {\n  const groupByRow = (acc, child, index, arr) => {\n    if (index % rowSize) return acc\n    return [...acc, arr.slice(index, index + rowSize)]\n  }\n\n  const toRows = row => <Tile key={row.reduce((a, e) => a + e.key, \"\")}>{row}</Tile>\n\n  const rows = React.Children.toArray(children)\n    .reduce(groupByRow, [])\n    .map(toRows)\n\n  return (\n    <Tile isAncestor isVertical>\n      {rows}\n    </Tile>\n  )\n}\n\nCardGroup.defaultProps = {\n  rowSize: 2,\n}\n\nexport const Card = ({ children }) => (\n  <Tile isParent isSize={6}>\n    <Tile isChild render={() => <Box className={styles.box}>{children}</Box>} />\n  </Tile>\n)\n","require(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\n/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n(function (global) {\n  'use strict';\n\n  var dateFormat = function () {\n    var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    var timezoneClip = /[^-+\\dA-Z]/g; // Regexes and supporting functions are cached through closure\n\n    return function (date, mask, utc, gmt) {\n      // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n      if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n        mask = date;\n        date = undefined;\n      }\n\n      date = date || new Date();\n\n      if (!(date instanceof Date)) {\n        date = new Date(date);\n      }\n\n      if (isNaN(date)) {\n        throw TypeError('Invalid date');\n      }\n\n      mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']); // Allow setting the utc/gmt argument via the mask\n\n      var maskSlice = mask.slice(0, 4);\n\n      if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n        mask = mask.slice(4);\n        utc = true;\n\n        if (maskSlice === 'GMT:') {\n          gmt = true;\n        }\n      }\n\n      var _ = utc ? 'getUTC' : 'get';\n\n      var d = date[_ + 'Date']();\n\n      var D = date[_ + 'Day']();\n\n      var m = date[_ + 'Month']();\n\n      var y = date[_ + 'FullYear']();\n\n      var H = date[_ + 'Hours']();\n\n      var M = date[_ + 'Minutes']();\n\n      var s = date[_ + 'Seconds']();\n\n      var L = date[_ + 'Milliseconds']();\n\n      var o = utc ? 0 : date.getTimezoneOffset();\n      var W = getWeek(date);\n      var N = getDayOfWeek(date);\n      var flags = {\n        d: d,\n        dd: pad(d),\n        ddd: dateFormat.i18n.dayNames[D],\n        dddd: dateFormat.i18n.dayNames[D + 7],\n        m: m + 1,\n        mm: pad(m + 1),\n        mmm: dateFormat.i18n.monthNames[m],\n        mmmm: dateFormat.i18n.monthNames[m + 12],\n        yy: String(y).slice(2),\n        yyyy: y,\n        h: H % 12 || 12,\n        hh: pad(H % 12 || 12),\n        H: H,\n        HH: pad(H),\n        M: M,\n        MM: pad(M),\n        s: s,\n        ss: pad(s),\n        l: pad(L, 3),\n        L: pad(Math.round(L / 10)),\n        t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n        tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n        T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n        TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n        Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n        o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n        S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n        W: W,\n        N: N\n      };\n      return mask.replace(token, function (match) {\n        if (match in flags) {\n          return flags[match];\n        }\n\n        return match.slice(1, match.length - 1);\n      });\n    };\n  }();\n\n  dateFormat.masks = {\n    'default': 'ddd mmm dd yyyy HH:MM:ss',\n    'shortDate': 'm/d/yy',\n    'mediumDate': 'mmm d, yyyy',\n    'longDate': 'mmmm d, yyyy',\n    'fullDate': 'dddd, mmmm d, yyyy',\n    'shortTime': 'h:MM TT',\n    'mediumTime': 'h:MM:ss TT',\n    'longTime': 'h:MM:ss TT Z',\n    'isoDate': 'yyyy-mm-dd',\n    'isoTime': 'HH:MM:ss',\n    'isoDateTime': 'yyyy-mm-dd\\'T\\'HH:MM:sso',\n    'isoUtcDateTime': 'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n    'expiresHeaderFormat': 'ddd, dd mmm yyyy HH:MM:ss Z'\n  }; // Internationalization strings\n\n  dateFormat.i18n = {\n    dayNames: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    monthNames: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec', 'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n  };\n\n  function pad(val, len) {\n    val = String(val);\n    len = len || 2;\n\n    while (val.length < len) {\n      val = '0' + val;\n    }\n\n    return val;\n  }\n  /**\n   * Get the ISO 8601 week number\n   * Based on comments from\n   * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n   *\n   * @param  {Object} `date`\n   * @return {Number}\n   */\n\n\n  function getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate()); // Change date to Thursday same week\n\n    targetThursday.setDate(targetThursday.getDate() - (targetThursday.getDay() + 6) % 7 + 3); // Take January 4th as it is always in week 1 (see ISO 8601)\n\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4); // Change date to Thursday same week\n\n    firstThursday.setDate(firstThursday.getDate() - (firstThursday.getDay() + 6) % 7 + 3); // Check if daylight-saving-time-switch occurred and correct for it\n\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds); // Number of weeks between target Thursday and first Thursday\n\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n  }\n  /**\n   * Get ISO-8601 numeric representation of the day of the week\n   * 1 (for Monday) through 7 (for Sunday)\n   * \n   * @param  {Object} `date`\n   * @return {Number}\n   */\n\n\n  function getDayOfWeek(date) {\n    var dow = date.getDay();\n\n    if (dow === 0) {\n      dow = 7;\n    }\n\n    return dow;\n  }\n  /**\n   * kind-of shortcut\n   * @param  {*} val\n   * @return {String}\n   */\n\n\n  function kindOf(val) {\n    if (val === null) {\n      return 'null';\n    }\n\n    if (val === undefined) {\n      return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n      return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n      return 'array';\n    }\n\n    return {}.toString.call(val).slice(8, -1).toLowerCase();\n  }\n\n  ;\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dateFormat;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = dateFormat;\n  } else {\n    global.dateFormat = dateFormat;\n  }\n})(this);","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport {\n  Section,\n  Container,\n  Hero,\n  HeroBody,\n  Title,\n  Content,\n  Level,\n  LevelLeft,\n  LevelRight,\n} from \"bloomer\"\nimport { Link, graphql } from \"gatsby\"\nimport dateFormat from \"dateformat\"\n\nimport Layout from \"../components/Layout\"\nimport { CardGroup, Card } from \"../components/CardGroup\"\n\nimport styles from \"./styles.module.sass\"\n\nconst BlogPage = ({ data, location }) => (\n  <Layout location={location}>\n    <Helmet>\n      <title>Blog – Alex Lende</title>\n    </Helmet>\n    <Hero isColor=\"warning\" isBold className={styles.angled}>\n      <HeroBody>\n        <Container hasTextAlign=\"centered\">\n          <Title className={styles.title}>Blog</Title>\n        </Container>\n      </HeroBody>\n    </Hero>\n    <Section>\n      <Container>\n        <CardGroup>\n          {data.allWordpressPost.edges\n            .filter(post => post.path !== \"/404/\")\n            .map(({ node: { id, slug, date, title, excerpt, categories } }) => (\n              <Card key={id}>\n                <Title tag=\"h2\">\n                  <Link to={`${dateFormat(date, \"UTC:yyyy/mm/dd\")}/${slug}`}>{title}</Link>\n                </Title>\n                <Level tag=\"div\" className={styles.level}>\n                  <LevelLeft>{dateFormat(date, \"UTC:mmm d, yyyy\")}</LevelLeft>\n                  <LevelRight>{categories.map(({ name }) => name).join(\", \")}</LevelRight>\n                </Level>\n                <Content dangerouslySetInnerHTML={{ __html: excerpt }} />\n              </Card>\n            ))}\n        </CardGroup>\n      </Container>\n    </Section>\n  </Layout>\n)\n\nexport default BlogPage\n\nexport const pageQuery = graphql`\n  {\n    allWordpressPost(sort: {fields: date, order: DESC}) {\n      edges {\n        node {\n          id\n          slug\n          title\n          date\n          excerpt\n          categories {\n            name\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}