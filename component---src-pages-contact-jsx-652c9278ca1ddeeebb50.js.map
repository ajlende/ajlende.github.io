{"version":3,"sources":["webpack:///./src/pages/contact.jsx"],"names":["Professional","tag","isMobile","href","title","faProps","icon","size","isSize","resume","basics","profiles","filter","category","map","url","network","key","Personal","chunk","array","firstChunk","slice","length","concat","row","index","Prose","ContactPage","location","isColor","isBold","className","styles","angled","hasTextAlign","isCentered","isOffset"],"mappings":"sqUAAA,iHAqBMA,EAAe,kBACnB,oCACE,kBAAC,QAAD,qBACA,kBAAC,QAAD,CAAOC,IAAI,MAAMC,UAAQ,GACvB,kBAAC,YAAD,CAAWC,KAAK,2BAA2BC,MAAM,SAC/C,kBAAC,IAAD,CAAMC,QAAS,CAAEC,KAAM,WAAYC,KAAM,MAAQC,OAAO,WAEzDC,EAAOC,OAAOC,SACZC,QAAO,kBAA+B,iBAA/B,EAAGC,YACVC,KAAI,gBAAGR,EAAH,EAAGA,KAAMS,EAAT,EAASA,IAAKC,EAAd,EAAcA,QAAd,OACH,kBAAC,YAAD,CAAWb,KAAMY,EAAKX,MAAOY,EAASC,IAAKD,GACzC,kBAAC,IAAD,CAAMX,QAAS,CAAEC,OAAMC,KAAM,MAAQC,OAAO,iBAkBlDU,EAAW,kBACf,oCACE,kBAAC,QAAD,iBARU,SAARC,EAASC,EAAOb,GACpB,IAAMc,EAAaD,EAAME,MAAM,EAAGf,GAClC,OAAKc,EAAWE,OACT,CAACF,GAAYG,OAAOL,EAAMC,EAAME,MAAMf,EAAMa,EAAMG,QAAShB,IADnCa,EAO5BD,CAAMV,EAAOC,OAAOC,SAASC,QAAO,kBAA+B,aAA/B,EAAGC,YAAyC,GAAGC,KAClF,SAACW,EAAKC,GAAN,OACE,kBAAC,QAAD,CAAOxB,UAAQ,EAACe,IAAG,YAAcS,GAC9BD,EAAIX,KAAI,gBAAGR,EAAH,EAAGA,KAAMS,EAAT,EAASA,IAAKC,EAAd,EAAcA,QAAd,OACP,kBAAC,YAAD,CAAWb,KAAMY,EAAKX,MAAOY,EAASC,IAAKD,GACzC,kBAAC,IAAD,CAAMX,QAAS,CAAEC,OAAMC,KAAM,MAAQC,OAAO,oBASpDmB,EAAQ,kBACZ,oCACE,kBAAC,QAAD,eACA,kBAAC,UAAD,KACE,kGAEE,8BAFF,UAIE,8BAJF,UAME,8BANF,4QAWA,2IAwCSC,UAhCK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,kBAAC,IAAD,CAAQA,SAAUA,GAChB,kBAAC,SAAD,KACE,wDAEF,kBAAC,OAAD,CAAMC,QAAQ,UAAUC,QAAM,EAACC,UAAWC,IAAOC,QAC/C,kBAAC,WAAD,KACE,kBAAC,YAAD,CAAWC,aAAa,YACtB,kBAAC,QAAD,CAAOH,UAAWC,IAAO7B,OAAzB,cAIN,kBAAC,OAAD,CAAMI,OAAO,UACX,kBAAC,WAAD,KACE,kBAAC,YAAD,KACE,kBAAC,UAAD,CAAS4B,YAAU,GACjB,kBAAC,SAAD,CAAQ5B,OAAQ,GACd,kBAACR,EAAD,MACA,kBAACkB,EAAD,OAEF,kBAAC,SAAD,CAAQmB,SAAU,EAAG7B,OAAQ,GAC3B,kBAACmB,EAAD","file":"component---src-pages-contact-jsx-652c9278ca1ddeeebb50.js","sourcesContent":["import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport {\n  Container,\n  Hero,\n  HeroBody,\n  Title,\n  Content,\n  Columns,\n  Column,\n  Level,\n  LevelItem,\n} from \"bloomer\"\n\nimport Layout from \"../components/Layout\"\nimport Icon from \"../components/Icon\"\n\nimport resume from \"../data/resume.json\"\n\nimport styles from \"./styles.module.sass\"\n\nconst Professional = () => (\n  <>\n    <Title>Professional</Title>\n    <Level tag=\"div\" isMobile>\n      <LevelItem href=\"mailto:ajlende@gmail.com\" title=\"Email\">\n        <Icon faProps={{ icon: \"envelope\", size: \"3x\" }} isSize=\"large\" />\n      </LevelItem>\n      {resume.basics.profiles\n        .filter(({ category }) => category === \"professional\")\n        .map(({ icon, url, network }) => (\n          <LevelItem href={url} title={network} key={network}>\n            <Icon faProps={{ icon, size: \"3x\" }} isSize=\"large\" />\n          </LevelItem>\n        ))}\n    </Level>\n  </>\n)\n\n/**\n * Chunk an array into equal segments\n * @param {Array} array Array to break up\n * @param {number} size Size of segments to break it up into\n */\nconst chunk = (array, size) => {\n  const firstChunk = array.slice(0, size)\n  if (!firstChunk.length) return array\n  return [firstChunk].concat(chunk(array.slice(size, array.length), size))\n}\n\nconst Personal = () => (\n  <>\n    <Title>Personal</Title>\n    {chunk(resume.basics.profiles.filter(({ category }) => category === \"personal\"), 4).map(\n      (row, index) => (\n        <Level isMobile key={`personal-${index}`}>\n          {row.map(({ icon, url, network }) => (\n            <LevelItem href={url} title={network} key={network}>\n              <Icon faProps={{ icon, size: \"3x\" }} isSize=\"large\" />\n            </LevelItem>\n          ))}\n        </Level>\n      ),\n    )}\n  </>\n)\n\nconst Prose = () => (\n  <>\n    <Title>Say Hi</Title>\n    <Content>\n      <p>\n        This is a nearly exhaustive list of all the places that you can add/\n        <wbr />\n        follow/\n        <wbr />\n        friend/\n        <wbr />\n        connect with me if you so desire. I've never been one to spend much time on social media, so\n        there's not much to see. That being said, I'll also probably get an email notification if I\n        get a DM on any of these, so still feel free to connect with me on any of them.\n      </p>\n      <p>\n        For anything not linked to here—including various Slack or Gitter groups I'm a part of—look\n        for @ajlende.\n      </p>\n    </Content>\n  </>\n)\n\nconst ContactPage = ({ location }) => {\n  return (\n    <Layout location={location}>\n      <Helmet>\n        <title>Contact – Alex Lende</title>\n      </Helmet>\n      <Hero isColor=\"success\" isBold className={styles.angled}>\n        <HeroBody>\n          <Container hasTextAlign=\"centered\">\n            <Title className={styles.title}>Contact</Title>\n          </Container>\n        </HeroBody>\n      </Hero>\n      <Hero isSize=\"medium\">\n        <HeroBody>\n          <Container>\n            <Columns isCentered>\n              <Column isSize={4}>\n                <Professional />\n                <Personal />\n              </Column>\n              <Column isOffset={1} isSize={4}>\n                <Prose />\n              </Column>\n            </Columns>\n          </Container>\n        </HeroBody>\n      </Hero>\n    </Layout>\n  )\n}\n\nexport default ContactPage\n"],"sourceRoot":""}